package LinkedList;

class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

public class SelfProblem_5 {
    public static Node ConvertArrLL(int[] arr) {
        Node head = new Node(arr[0]);
        Node mover = head;
        for (int i = 1; i < arr.length; i++) {
            Node temp = new Node(arr[i]);
            mover.next=temp;
            mover = temp;

        }
        return head;

    }

    public static Node reverseLL(Node head){
        Node prev= null;
        Node next = null;
        Node curr = head;

        while(curr != null){
            next = curr.next;
            curr.next = prev;

            prev = curr;
            curr = next;
        }
        return prev;
    }
    public static void main(String[] args) {
        int[] arr = { 1, 2, 3, 4 };
        Node val = reverseLL(ConvertArrLL(arr));

        //Traversal perform
        while(val != null){
            System.out.print(val.data+ " ->");
            val = val.next;
        }
        System.out.println("Null");

    }
}
